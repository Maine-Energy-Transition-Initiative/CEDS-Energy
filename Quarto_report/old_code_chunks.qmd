```{r}
#| label: setup siding old
#| echo: false
#| eval: false

siding <- exterior |>
  select('Siding type', 'Condition of the siding?', 'Comment about condition of the siding') |>
  mutate(Info = paste(`Siding type`,'in ', `Condition of the siding?`, 'condition .', `Comment about condition of the siding`))#|>

siding <- siding[, -c(1:3)]

siding <- siding|>
  pivot_longer(cols = Info ,
    names_to = "Info" ,
    values_to = "Values")|>
  mutate(Info = recode(Info,  'Info' = 'Siding:',))
```

```{r}
#| label: setup exterior doors old
#| echo: false
#| eval: false

doors <- exterior |>
  select('Door(s) type | 1', 'Number of doors of this type | 1', 'Total door area of this type | 1') |>
  mutate(Info = paste(`Number of doors of this type | 1`, `Door(s) type | 1`,'door. Totaling ', `Total door area of this type | 1`, 'square feet.'))#|>

doors <- doors[, -c(1:3)]

doors <- doors|>
  pivot_longer(cols = Info ,
    names_to = "Info" ,
    values_to = "Values")|>
  mutate(Info = recode(Info,  'Info' = 'Exterior doors:',))
```

```{r}
#| label: setup windows old
#| echo: false
#| eval: false

windows <- exterior |>
  select('How many windows of this type there are? | 1', 'Number of panes in windows of this type and material | 1 [single]', 'Number of panes in windows of this type and material | 1 [double]', 'Number of panes in windows of this type and material | 1 [triple]', 'Condition of the windows of this type? | 1', 'More about condition of the windows of this type | 1', 'Total windows areas of this type? | 1') |>
  mutate(Info = paste(`How many windows of this type there are? | 1`, `Number of panes in windows of this type and material | 1 [single]`, `Number of panes in windows of this type and material | 1 [double]`, `Number of panes in windows of this type and material | 1 [triple]`, `Condition of the windows of this type? | 1`, `More about condition of the windows of this type | 1`, `Total windows areas of this type? | 1`))#|>

windows <- windows[, -c(1:7)]

windows <- windows|>
  pivot_longer(cols = Info ,
    names_to = "Info" ,
    values_to = "Values")|>
  mutate(Info = recode(Info,  'Info' = 'Windows:',))
```

```{r}
#| label: 3.2 table setup old
#| echo: false
#| eval: false

all_exterior <- roof_type_all |>
  rbind(roof_moisture_control, siding, doors, windows )#|>
  #arrange(factor(Info, levels = c('Date Built', 'Foundation Type', 'Attic', 'Number of floors', 'Square footage of conditioned space', 'Volume of conditioned space (cubic feet)','Ambient Carbon Monoxide reading')))
```


```{r}
#| label: setup data 3.2 not finished
#| echo: false
#| eval: false

exterior_n <- clean_audit_data|>
  select(roof_type, roof_age, condition_of_the_roof, orientation_of_the_primary_roof_faces, comment_about_condition_of_the_roof, existing_moisture_control_strategies, condition_of_moisture_control_strategies, comments_about_existing_moisture_control_strategies, siding_type, condition_of_the_siding, comment_about_condition_of_the_siding, door_s_type_2_insulated, door_s_type_2_hollow, door_s_type_2_glass_door, condition_fit_of_the_doors_of_this_type_2, number_of_doors_of_this_type_2, total_door_area_of_this_type_2_174, door_s_type_1_insulated, door_s_type_1_hollow, door_s_type_1_glass_door, condition_fit_of_the_doors_of_this_type_1, number_of_doors_of_this_type_1, total_door_area_of_this_type_1, door_s_type_3_insulated, door_s_type_3_hollow, door_s_type_3_glass_door, condition_fit_of_the_doors_of_this_type_3, number_of_doors_of_this_type_3, total_door_area_of_this_type_3_178, how_many_windows_of_this_type_there_are_1, how_many_windows_of_this_type_there_are_2, how_many_windows_of_this_type_there_are_3, how_many_windows_of_this_type_there_are_4, how_many_windows_of_this_type_there_are_5) #'How many windows of this type there are? | 1', 'Number of panes in windows of this type and material | 1 [single]', 'Number of panes in windows of this type and material | 1 [double]', 'Number of panes in windows of this type and material | 1 [triple]', 'Condition of the windows of this type? | 1', 'More about condition of the windows of this type | 1', 'Total windows areas of this type? | 1'

```

```{r}

  #add description to each recommendation
#pivot_recommendations['Description'] <- c("Have the furnace and flue inspected and adjusted by a licensed professional. This should be available from your oil or propane delivery company.","Install high-efficiency shower heads to reduce the amount of water and energy to heat the water used when showering.","Switch your light bulbs to LED light bulbs. LEDs use 80% less energy than incandescent light bulbs which can significantly reduce your electricity bill. We provide free LED light bulbs, contact us for some if we did not give you any during the audit.","Window-Dressers insulating window inserts help air-seal windows and reduce heat loss and gain. There will be a Window-Dresser community build on Great Cranberry Island from November 8th through 14th. Sign up at https://windowdressers.org/sign-up-for-inserts/ There will be a Window Dressers build in Eastport from November 18th through 25th. Contact Pete to sign up: 207-214-4751 or EastportMEEnergy@gmail.com","Replace your refrigerator with a new, EnergyStar certified fridge. Look at the Energy Guide label to compare the energy use of new refrigerators.","Replace your freezer with a new, EnergyStar certified freezer. Look at the Energy Guide label to compare the energy use of new freezers.","Induction cooking appliances are more efficient and safer than electric or gas ones. There is no risk of carbon monoxide or other harmful combustion gases, and the surface doesn't heat up without a pot or pan on it.","Install a heat pump water heater to provide your hot water for cooking and bathing. This is the most efficient way to heat water and will save hundreds of dollars a year compared to electric resistance, heating oil or propane hot water. It will also help to dehumidify while it's running. If your current water heater burns oil or propane, this will also remove a source of combustion gases from your home.","Install gutters and downspouts that divert water at least six feet away from the foundation and to where the ground slopes away from the house.","Bathroom exhaust fans should be rated for at least 80 cubic feet per minute (CFM) if there is a shower. We recommend Panasonic WhisperQuiet or similar fans that don’t create excess noise.","We recommend a kitchen exhaust fan to remove harmful combustion gases from your home, which should be rated for at least 100 cubic feet per minute (CFM). A fan can also help with moisture concerns.","Install a vapor barrier on the basement floor to stop moisture from entering the basement and house.","Install spray foam on the basement/crawlspace walls to prevent moisture infiltration and reduce heat loss.","Air seal the attic and insulate it to at least R-60 (18” of loose-fill cellulose insulation).","Insulate the wall stud cavities with dense packed, blown-in cellulose insulation.","Add a continuous layer of insulation and potentially replace the air and moisture barrier once it becomes time to replace the siding.","Replace your existing electrical panel to increase the capacity to 200 amps (and address potential safety hazards).","Install air source heat pumps and whole-house surge protection.","An electric vehicle will eliminate your gas costs and reduce fossil fuel dependence. A 2020 study by Consumer Reports found that lifetime ownership costs were significantly lower for EVs, saving between $6,000 - $10,000 over their lifetimes.","Rooftop solar can supply most or all of your home electrical demands. Contact a solar company for pricing and details specific to your home.", "TYPE HERE (Other 1)", "Insulate both hot and cold water pipes that are uninsulated in the basement/crawlspace. This will save energy and prevent condensation.", "Upgrade your electrical panel to add whole-house surge protection.", "We recommend sealing air leaks and weatherstripping exterior doors.", "TYPE HERE (Other 2)", "TYPE HERE (Other 3)")

  #rename the titles of recommendation as wanted to be outputted in report
#ranked_recommendations <- pivot_recommendations |>
 # mutate(Recommendation = recode(Recommendation,  'Recommendations ranking [Furnace/Boiler Tune-up]' = 'Furnace/Boiler Tune-up', 'Recommendations ranking [High Efficiency Showerhead(s)]' = 'High-efficiency Shower Head(s)', 'Recommendations ranking [LEDs]' = 'LEDs', 'Recommendations ranking [Window-Dressers]' = 'Window Dressers', 'Recommendations ranking [Refrigerator]' = 'Refrigerator', 'Recommendations ranking [Freezer]' = 'Freezer', 'Recommendations ranking [Induction Stove/Oven]' = 'Induction Stove/Oven', 'Recommendations ranking [Heat Pump Water Heater]' = 'Heat Pump Water Heater', 'Recommendations ranking [Gutters]' = 'Gutters', 'Recommendations ranking [Bathroom Exhaust Fan(s)]' = 'Bathroom Exhaust Fan(s)', 'Recommendations ranking [Kitchen Exhaust Fan]' = 'Kitchen Exhaust Fan', 'Recommendations ranking [Vapor Barrier]' = 'Vapor Barrier', 'Recommendations ranking [Spray Foam Basement/Crawlspace Walls]' = 'Spray Foam Basement/Crawlspace Walls', 'Recommendations ranking [Attic Insulation and Air Sealing]' = 'Attic Insulation and Air Sealing', 'Recommendations ranking [Blown-in Cellulose Wall Insulation]' = 'Blown-in Cellulose Wall Insulation','Recommendations ranking [Continuous Exterior Wall Insulation]' = 'Continuous Exterior Wall Insulation', 'Recommendations ranking [Electrical Panel Upgrade]' = 'Electrical Panel Upgrade', 'Recommendations ranking [Air Source Heat Pump]'= 'Air Source Heat Pump', 'Recommendations ranking [EV and Charger]' = 'EV+Charger', 'Recommendations ranking [Solar]' = 'Solar', 'Recommendations ranking [Other 1]' = 'Other 1', 'Recommendations ranking [Other 2]' = 'Other 2','Recommendations ranking [Other 3]' = 'Other 3','Recommendations ranking [Pipe Insulation]' = 'Pipe Insulation', 'Recommendations ranking [Whole-House Surge Protection]' = 'Whole-House Surge Protection', 'Recommendations ranking [Misc. Air Sealing]' = 'Misc. Air Sealing')) |>
  #mutate_at('Rank', as.numeric)
    
  #rank the recommendation as per auditors ranking and remove recommendations that are not rerecorded/applicable
#ranked_clean_recommendations <- ranked_recommendations|>
   #arrange((Rank))|>
   #filter(Rank != 0)#|>
   #select(-Rank)
```

