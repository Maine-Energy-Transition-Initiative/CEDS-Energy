---
title: ""
format:
  html: default
  pdf: default
  docx: default
editor: visual
params:
  adress: "Me_test1"
  author: "Rudolfs"
---

```{r}
#| label: load packages
#| echo: false
#| warning: false

#Attach Packages
library(readr)
library(here)
library(dplyr)
library(ggplot2)
library(stringr)
library(readxl)
library(tidyverse)
library(gridExtra)
library(grid)
library(jpeg)
library(cowplot)

```

```{r}
#| label: setup data
#| echo: false
#| warning: false

#Load Data
Energy_Audits <- read_excel("../data/Energy_Audit_template.xlsx")

Building_Audit <- Energy_Audits |>
  filter(Adress_Name == params$adress) # Auditor_full_name == params$Auditor_full_name

```

## Energy Audit Report

```{r}
#| label: house image path setup
#| echo: false
#| warning: false

# Unique identifier for the image
image_id <- "House_photo_placeholder"

# Generate the file path for the image based on the identifier
image_path <- paste0("", image_id, ".png")


```

```{r, out.width = "50%", fig.align = 'center'}
#| label: image render
#| echo: false
#| warning: false
#| eval: false

# Include the image in the report
knitr::include_graphics(image_path,)
```



Homeowner: `r params$adress`

Address: `r params$adress`

Auditors: `r params$author`

Contact: mdicommunityenergy\@coa.edu, 802 266 0301

Date: `r format(Sys.time(), '%e %B %Y')`

--------------------------------------------------------------------------

We conducted an energy assessment of your home on `r Building_Audit$Audit_Date`. This report will tell you what we did, what we found, and what we suggest for your home. These suggestions include information on incentives and financing to make improvements more affordable.

--------------------------------------------------------------------------

![](images/Logos-together.png)

## Home's current conditions

::: {layout-ncol="2"}
Build: Year `r Building_Audit$Year_Build`

Primary heating fuel: `r Building_Audit$Heating_Type`

Volume: `r Building_Audit$Total_floor_area` cubic feet

Secondary heating fuel:

Area: `r Building_Audit$Total_floor_area` square feet

Water heating fuel:

Net wall area: `r Building_Audit$Net_wall_area` square feet

Window type: `r Building_Audit$Window_type`paned

Ceiling/attic area: `r Building_Audit$"Ceiling/attic_area"` square feet

Window area:`r Building_Audit$Window_area` square feet

Ceiling height: `r Building_Audit$Ceiling_height` feet

Door type and area: `r Building_Audit$Door_type`, `r Building_Audit$Door_area` square feet
:::

## Health and safety

Combustion Gas Spillage Test – `r case_when(Building_Audit$"Seconds of Combustion Gas Spillage Test" >= 60 ~ 'FAILED',TRUE ~ 'PASSED')` (Emissions Spilled for `r Building_Audit$"Seconds of Combustion Gas Spillage Test"` seconds)

Appliance Carbon Monoxide (CO) Test – `r case_when(Building_Audit$"Appliance Carbon Monoxide (CO) Test" > 26 ~ 'FAILED',TRUE ~ 'PASSED')`( Detected `r Building_Audit$"Appliance Carbon Monoxide (CO) Test"`parts per million)

Ambient Carbon Monoxide (CO) Test – `r case_when(Building_Audit$"Carbon Monoxide (CO)parts per million Test" > 35 ~ 'FAILED',TRUE ~ 'PASSED')` (Detected `r Building_Audit$"Carbon Monoxide (CO)parts per million Test"` parts per million)

Combustion Appliance Draft Test – `r Building_Audit$"Combustion Appliance Draft Test (PASSED/FAILED)"`

```{r}
#| label: Gas leak message
#| echo: false
#| results: hide
 Gas_leak_message <- if (Building_Audit$Gas_leak_where != 'N/A'){
    print (Building_Audit$Gas_leak_where)
} else {
    print ("")}
```

Gas leak detection: `r Building_Audit$"Gas leak detection(PASSED/FAILED)"`, `r Gas_leak_message`

```{r}
#| label: Health and safety concerns
#| echo: false
#| results: hide
Health_safety_message <- if (Building_Audit$`Other Health & Safety Concerns` != 'NA'){
    print (Building_Audit$`Other Health & Safety Concerns`)
} else {print ("There were no further health and/or safety concerns that were identified at the time of your energy audit.")}
```

Other Health & Safety Concerns: `r Health_safety_message`

## Air quality

## Insulation levels

|                    |                                                 |                                |
|------------------|--------------------------------|----------------------|
| HOME COMPONENT     | YOUR HOME’S R-VALUES                            | US D.O.E. RECOMMENDED R-VALUES |
| Attics/Ceilings    | `r Building_Audit$"Attics/Ceilings R-value"`    | 60                             |
| Above Ground Walls | `r Building_Audit$"Above Ground Walls R-value"` | 30                             |
| Basement Walls     | `r Building_Audit$"Basement Walls R-value"`     | 19                             |

source [U.S. Department of Energy, Pacific Northwest Labaratory](https://basc.pnnl.gov/information/2009-2021-iecc-and-irc-minimum-insulation-requirements-new-homes)

Here are some picture of your insulation.

```{r}
#| label: insulation image path setup
#| echo: false
#| warning: false

insulation <- list.files('images', pattern = 'VIS')
# Unique identifier for the image
insulation_image_id <- insulation

insulation_image_path <- paste0("images/", insulation_image_id, "")
```

```{r, out.width = "50%", fig.align = 'left'}
#| label: insulaton image render
#| echo: false
#| warning: false

# Include the image in the report
knitr::include_graphics(insulation_image_path,)
```

Images of the insulation pictures.

## Blower Door / Air Leakage Test

The blower door test, determined that your homes air leakage rate is `r Building_Audit$"Natural Air Changes per Hour(ACHn)"`Natural Air Changes per Hour(ACHn) (Should I explain what ACHn is?) CFM50 was `r Building_Audit$"CFM50 reading"` with `r Building_Audit$"Ring Used"` ring used. (Include photo)

```{r, out.width = "50%", fig.align = 'left'}
#| label: blower door tests ring
#| echo: false
#| warning: false

ring <- list.files('images', pattern = 'ring')
# Unique identifier for the image
ring_image_id <- ring

ring_image_path <- paste0("images/", ring_image_id, "")


# Include the image in the report
knitr::include_graphics(ring_image_path,)
```

`r Building_Audit$"Air_leakage_comments"`

### Your Building on the scale

This scale shows how is your building compare to air leakage standards. Where being closer to zero providing with the best energy saving.

```{r}
#| label: setup air leakage data
#| echo: false
ACHn <- Building_Audit |>
  select("Natural Air Changes per Hour(ACHn)")|>
  mutate()
ACHn1 <- data.frame(IdialACHn = c("Ideal"))
airleakdata <- cbind(ACHn,ACHn1)  
```

```{r}
#| label: air leakage tests ggplot
#| warning: false
#| echo: false

ggplot(airleakdata, aes(y=IdialACHn))+
  geom_bar(width=1, fill ="#add8e6")+
  #scale_fill_gradient(low="#FF8888",high="#FF0000")+ #it should be working idk why it doesn't
  geom_vline(xintercept= c(0, 0.04, 0.35, 0.41, 0.6,1), size= 1.3, ylim)+
  geom_vline(xintercept=airleakdata$"Natural Air Changes per Hour(ACHn)",
                linetype=1, colour="blue", size= 1.3)+ #(maybe have coditional color? red if ACHn is to big blue if it's ok)
  #scale_x_reverse()+
  
#The vline text lables
  geom_text(aes(x=airleakdata$"Natural Air Changes per Hour(ACHn)", label="Your Home", y=1), nudge_x= -0.03, colour="blue", angle=90, text=element_text(size=11)) +
  geom_text(aes(x=0, label="", y=1), nudge_x= -0.03, colour="black", angle=90, text=element_text(size=11)) +
  geom_text(aes(x=0.04, label="Passive House", y=1), nudge_x= -0.02, colour="black", angle=90, text=element_text(size=11)) +
  geom_text(aes(x=0.35, label="Very Tight Mechanical \nVentilation Needed", y=1), nudge_x= -0.05, colour="black", angle=90, text=element_text(size=11)) +
  geom_text(aes(x=0.41, label="Tight", y=1), nudge_x= -0.03, colour="black", angle=90, text=element_text(size=11)) +
  geom_text(aes(x=0.6, label="Leaky", y=1), nudge_x= -0.03, colour="black", angle=90, text=element_text(size=11)) +
  geom_text(aes(x=1, label="Very Leaky", y=1), nudge_x= -0.03, colour="black", angle=90, text=element_text(size=11)) +
  
#The vline text values 
  geom_text(aes(x=airleakdata$"Natural Air Changes per Hour(ACHn)", label=airleakdata$"Natural Air Changes per Hour(ACHn)", y=1.55), nudge_x= -0.03,nudge_y = -1, colour="blue", angle=90, text=element_text(size=11)) +
  geom_text(aes(x=0, label="0", y=1.55), nudge_x= -0.03,nudge_y = -1.0323, colour="black", angle=90, text=element_text(size=11)) +
  geom_text(aes(x=0.04, label="0.04", y=1.55), nudge_x= -0.02, nudge_y = -1, colour="black", angle=90, text=element_text(size=11)) +
  geom_text(aes(x=0.35, label="0.35", y=1.55), nudge_x= -0.03,nudge_y = -1, colour="black", angle=90, text=element_text(size=11)) +
  geom_text(aes(x=0.41, label="0.41", y=1.55), nudge_x= -0.03,nudge_y = -1, colour="black", angle=90, text=element_text(size=11)) +
  geom_text(aes(x=0.6, label="0.6", y=1.55), nudge_x= -0.03,nudge_y = -1, colour="black", angle=90, text=element_text(size=11)) +
  geom_text(aes(x=1, label="1", y=1.55), nudge_x= -0.03,nudge_y = -1.03, colour="black", angle=90, text=element_text(size=11)) +
  theme_void()
#Here will be a singular bar plat with air leak visualization
```

The blower door test and visual inspection detected the following areas for moderate to severe air leakage:

(This would be pictures)

```{r}
#| label: blower door image path setup
#| echo: false
#| warning: false

insulation <- list.files('images', pattern = '503')
# Unique identifier for the image
blowerdoor_image_id <- insulation

blowerdoor_image_path <- paste0("images/", blowerdoor_image_id, "")

pic_num <- length(blowerdoor_image_path)
```

```{r, out.width = "50%", fig.align = 'left'}
#| label: blower door image render
#| echo: false
#| warning: false
#| eval: false

# Include the image in the report
#knitr::include_graphics(blowerdoor_image_path,)

if(pic_num == 6){

img1 <- readJPEG(source = blowerdoor_image_path[1])
img2 <- readJPEG(source = blowerdoor_image_path[2])
img3 <- readJPEG(source = blowerdoor_image_path[3])
img4 <- readJPEG(source = blowerdoor_image_path[4])
img5 <- readJPEG(source = blowerdoor_image_path[5])
img6 <- readJPEG(source = blowerdoor_image_path[6])

grob <- vector("list", length = pic_num)
grob[[1]] <- rasterGrob(img1)
grob[[2]] <- rasterGrob(img2)
grob[[3]] <- rasterGrob(img3)
grob[[4]] <- rasterGrob(img4)
grob[[5]] <- rasterGrob(img5)
grob[[6]] <- rasterGrob(img6)

margin = theme(plot.margin = unit(c(2,2,2,2), "cm"))

grid.arrange(grobs = grob,  nrow = 3, lapply(grob, "+", ))

} else if (pic_num < 5){
img1 <- readJPEG(source = blowerdoor_image_path[1])
img2 <- readJPEG(source = blowerdoor_image_path[2])
img3 <- readJPEG(source = blowerdoor_image_path[3])
img4 <- readJPEG(source = blowerdoor_image_path[4])
img5 <- readJPEG(source = blowerdoor_image_path[5])
img6 <- readJPEG(source = blowerdoor_image_path[6])

grob1 <- rasterGrob(img1)
grob2 <- rasterGrob(img2)
}
# take the pic_num lenght and devide by two to make it it more authomatic
```

```{r, out.width="49%",out.height="20%",fig.show='hold',fig.align='center'}
#| echo: false
knitr::include_graphics(blowerdoor_image_path,)
```

```{r}
#| label: air leakage tests2 ggplot
#| warning: false
#| echo: false
#| eval: false

ggplot(airleakdata, aes(x=IdialACHn))+
  geom_bar(width=1, fill ="#add8e6")+
  #scale_fill_gradient(low="#FF8888",high="#FF0000")+ #it should be working idk why it doesn't 
  #expand_limits(x = c(0, 2), y = c(0,1))+
  
  geom_hline(yintercept= c(0, 0.04, 0.35, 0.41, 0.6,1), size= 1.3, ylim)+
  geom_hline(yintercept=airleakdata$"Natural Air Changes per Hour(ACHn)",
                linetype=1, colour="blue", size= 1.3)+ #(maybe have coditional color? red if ACHn is to big blue if it's ok)
  
#The vline text lables
  geom_text(aes(y=airleakdata$"Natural Air Changes per Hour(ACHn)", label="Your Home", x=1), nudge_y = -0.03, colour="blue", angle=0, text=element_text(size=11)) +
  geom_text(aes(y=0, label="", x=0.5), colour="black", angle=0,nudge_y = -0.03, text=element_text(size=11)) +
  geom_text(aes(y=0.04, label="Passive House", x=1), colour="black", angle=0,nudge_y = -0.01, text=element_text(size=11)) +
  geom_text(aes(y=0.35, label="Very Tight Mechanical \nVentilation Needed", x=1), nudge_y = -0.06, colour="black", angle=0, text=element_text(size=11)) +
  geom_text(aes(y=0.41, label="Tight", x=1), nudge_y = -0.03, colour="black", angle=0, text=element_text(size=11)) +
  geom_text(aes(y=0.6, label="Leaky", x=1), nudge_y = -0.03, colour="black", angle=0, text=element_text(size=11)) +
  geom_text(aes(y=1, label="Very Leaky", x=1),nudge_y = -0.03, colour="black", angle=0, text=element_text(size=11)) +
  
#The vline text values 
  geom_text(aes(x=airleakdata$"Natural Air Changes per Hour(ACHn)", label=airleakdata$"Natural Air Changes per Hour(ACHn)", y=0.5,),nudge_x = 0.05,nudge_y = 0.03, colour="blue", angle=0, text=element_text(size=11)) +
  geom_text(aes(y=0, label="0", x=0.55),nudge_y = 0.03, colour="black", angle=0, text=element_text(size=11)) +
  geom_text(aes(y=0.04, label="0.04", x=0.55),nudge_y = 0.03, colour="black", angle=0, text=element_text(size=11)) +
  geom_text(aes(y=0.35, label="0.35", x=0.55),nudge_y = 0.03, colour="black", angle=0, text=element_text(size=11)) +
  geom_text(aes(y=0.41, label="0.41", x=0.55),nudge_y = 0.03, colour="black", angle=0, text=element_text(size=11)) +
  geom_text(aes(y=0.6, label="0.6", x=0.55),nudge_y = 0.03, colour="black", angle=0, text=element_text(size=11)) +
  geom_text(aes(y=1, label="1", x=0.55),nudge_y = 0.03, colour="black", angle=0, text=element_text(size=11)) +
  theme_void() 

#Here will be a singular bar plat with air leak visualization

```

## Heating and Cooling Systems

(Image of heating system) Your home is currently heated with an `r Building_Audit$"Heater Type"` Your current heating system has the following efficiency and output ratings:

-   Heating efficiency = `r Building_Audit$"Heating Efficiency"`

-   Annual Fuel Utilization Efficiency (AFUE)(need a new column here)

-   Heating output = `r Building_Audit$"Heating output"` Btu/hr.

Your home is cooled with (need new column for cooling type) r code here. (I need conditional rendering here) The size, construction, and energy consuming features of your home have all been factored into the calculation of the heating and cooling loads for your home:

-   Heating load = `r Building_Audit$"Heating Load"` Btu/hr

-   Cooling load = `r Building_Audit$"Cooling load"`Btu/hr

It is important to make sure that a new heating/cooling system is designed to meet the heating and cooling loads of your home. And please keep in mind that any changes to your home (i.e. – air sealing, insulating, etc…) will ultimately decrease your heating load and can lead to saving money on a new heating system by enabling you to purchase a system with a lower energy output.

## Buildings Electricy use

## Energy Bill analysis

```{r}
#| echo: false
#| warning: false
library(readxl)
library(tidyverse)
```

```{r}
#| echo: false
#| warning: false
#Need to have correct df
table_heating_oil_case_study <- read_excel("../data/table_heating_oil_case_study.xlsx")

table_electricity_case_study <- read_excel("../data/table_electricity_case_study.xlsx")
```

```{r}
#| echo: false
# need ton have correct df
Carriage_heating_oil <- table_heating_oil_case_study |>
  filter(Building == "Carriage") |> #need correct filter 
  mutate()

Carriage_electricity <- table_electricity_case_study |>
  filter(Building == "Carriage  House") |>
  mutate()
```

```{r}
#| echo: false
#| warning: false
ggplot() +
  geom_line(Carriage_heating_oil, mapping = aes(x = `Delivery Date`, y = Gallons), color = "blue") + 
  geom_line(Carriage_electricity, mapping = aes(x = Month, y = KWH), color = "red") +
  scale_y_continuous(
    name = "Gallons",
    sec.axis = sec_axis(trans = ~.*1, name="kWh"))+
  geom_vline(xintercept=as.POSIXct(as.Date("2021-08-01")),
                linetype=3, colour="black") +
   annotate("text", x=as.POSIXct(as.Date("2021-06-01")), y=600, label="David started as the Director of Energy", angle=90) +
  geom_vline(xintercept=as.POSIXct(as.Date("2019-09-01")),
                linetype=3, colour="black") +
   annotate("text", x=as.POSIXct(as.Date("2019-07-01")), y=400, label="Electricity Data collection sarted", angle=90)+
  theme(axis.title.y.left = element_text(colour = "blue"),axis.title.y.right = element_text(colour = "red" ))+
  labs(title = "Carriage's house energy history", subtitle = "Gallons of heating oil and kWh of electricity")
```
