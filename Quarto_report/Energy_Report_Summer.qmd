---
title: ""
format:
  html: default
  pdf: default
  docx: default
css: styles.css
editor: source
params:
  adress: "Me_test1"
  author: "Rudolfs"
toc: false
---

```{r}
#| label: load packages
#| echo: false
#| warning: false

#Attach Packages
library(readr)
library(here)
library(dplyr)
library(ggplot2)
library(stringr)
library(readxl)
library(tidyverse)
library(gridExtra)
library(grid)
library(jpeg)
library(cowplot)
library(googlesheets4)
library(reticulate)
library(gt)

```

```{r}
#| label: setup data
#| echo: false
#| warning: false

#Load Data
Energy_Audits <- read_excel("../data/Energy_Audit_template.xlsx")

Building_Audit <- Energy_Audits |>
  filter(Adress_Name == params$adress) # Auditor_full_name == params$Auditor_full_name

```

```{r}
#| label: load googlesheets data
#| echo: false
#| warning: false

#Load Data
energy_test_googlesheets <- read_sheet("https://docs.google.com/spreadsheets/d/1L38lSRkBoKfQBvQ4I7ItyoWNYLbWi3Lg4Jh2KKlzdOg/edit?usp=sharing")

```


```{r}
#| label: setup rank recommendations data
#| echo: false
#| warning: false

recommendations <- energy_test_googlesheets |>
  #filter(Adress_Name == params$adress) |> #need to parametorize
  select("Recommendations ranking [Furnace Tune-up]":"Recommendations ranking [Other]")

pivot_recommendations <- recommendations |>
  pivot_longer(cols = "Recommendations ranking [Furnace Tune-up]":"Recommendations ranking [Other]",
    names_to = "Recommendation", 
    values_to = "Rank")

pivot_recommendations['Description'] <- c("Description of Recommendation","Description of Recommendation","Description of Recommendation","Description of Recommendation","Description of Recommendation","Description of Recommendation","Description of Recommendation","Description of Recommendation","Description of Recommendation","Description of Recommendation","Description of Recommendation","Description of Recommendation","Description of Recommendation","Description of Recommendation","Description of Recommendation","Description of Recommendation","Description of Recommendation","Description of Recommendation","Description of Recommendation","Description of Recommendation")

ranked_recommendations <- pivot_recommendations |>
  mutate(Recommendation = recode(Recommendation,  'Recommendations ranking [Furnace Tune-up]' = 'Furnace Tune-up', 'Recommendations ranking [Low-flow showerhead(s)]' = 'Low-flow showerhead(s)', 'Recommendations ranking [LEDs]' = 'LEDs', 'Recommendations ranking [Window Dressers]' = 'Window Dressers', 'Recommendations ranking [Refrigerator]' = 'Refrigerator', 'Recommendations ranking [Freezer]' = 'Freezer', 'Recommendations ranking [Induction Stove]' = 'Induction Stove', 'Recommendations ranking [Heat Pump Water Heater]' = 'Heat Pump Water Heater', 'Recommendations ranking [Gutters]' = 'Gutters', 'Recommendations ranking [Bathroom exhaust fan]' = 'Bathroom exhaust fan', 'Recommendations ranking [Kitchen exhaust fan]' = 'Kitchen exhaust fan', 'Recommendations ranking [Vapor Barrier]' = 'Vapor Barrier', 'Recommendations ranking [Spray Foam]' = 'Spray Foam', 'Recommendations ranking [Attic Insulation ]' = 'Attic Insulation', 'Recommendations ranking [Wall Insulation]' = 'Wall Insulation', 'Recommendations ranking [Electrical Panel Upgrade]' = 'Electrical Panel Upgrade', 'Recommendations ranking [Air Source Heat Pump]'= 'Air Source Heat Pump', 'Recommendations ranking [EV+charger]' = 'EV+charger', 'Recommendations ranking [Solar]' = 'Solar', 'Recommendations ranking [Other]' = 'Other')) |>
    arrange((Rank))|>
    filter(Rank != 0)

ranked_clean_recommendations <- ranked_recommendations|>
    select(-Rank)
```

```{r}
#| label: Setup basics data
#| echo: false
#| warning: false
#| eval: true

double_basics <- energy_test_googlesheets |>
  select(`Date Built`, `Number of floors`, `Volume of conditioned space (cubic feet)`, `Square footage of conditioned space`, `Thickness of the attic insulation (inches), at the thinnest location`, `Gallons of Heating Oil`,`Cost in Dollars (Heating Oil)`,`Gallons of Kerosene`,`Cost in Dollars (Kerosene)`,`Gallons of Propane`,`Cost in Dollars (Propane)`,`kWh of Electricity`,`Cost in Dollars (Electricity)`,`Cords of Firewood`,`Cost in Dollars (Firewood)`,`Tons of pellets`,`Cost in Dollars (Pellets)`,`Write the quantity and measuring unit`, `Cost in Dollars (Other)` )

character_basics <- energy_test_googlesheets |>
  select( `Foundation Type`, `Attic insulation type`, `Quality of attic insulation's installation? Assess worst part of installation.`,`Ambient Carbon Monoxide reading`,)

pivot_double_basics <- double_basics |>
  pivot_longer(cols = "Date Built":"Cost in Dollars (Other)",
    names_to = "Info", 
    values_to = "Values")

pivot_character_basics <- character_basics |>
  pivot_longer(cols = "Foundation Type":"Ambient Carbon Monoxide reading",
    names_to = "Info", 
    values_to = "Values")

all_basics <- pivot_double_basics |>
  rbind(pivot_character_basics) |>
  arrange(factor(Info, levels = c('Date Built', 'Foundation Type', 'Attic insulation type',  'Thickness of the attic insulation (inches), at the thinnest location', "Quality of attic insulation's installation? Assess worst part of installation.", 'Number of floors', 'Square footage of conditioned space', 'Volume of conditioned space (cubic feet)','Ambient Carbon Monoxide reading',  'Gallons of Heating Oil', 'Cost in Dollars(Heating Oil)', 'Gallons of Kerosene', 'Cost in Dollars(Kerosene)', 'Gallons of Propane', 'Cost in Dollars(Propane)', 'kWh of Electricity', 'Cost in Dollars(Electricity)', 'Cords of Firewood', 'Cost in Dollars(Firewood)', 'Tons of pellets', 'Cost in Dollars(Pellets)', 'Write the quantity and measuring unit', 'Cost in Dollars(Other)' ))) #|>
  #filter(Values != is.na(NA))
```


```{r}
#| label: setup energy sources gallons
gallon_sources <- double_basics |>
  select('Gallons of Heating Oil', 'Gallons of Propane', 'Gallons of Kerosene')|>
  pivot_longer(cols = c('Gallons of Heating Oil', 'Gallons of Propane', 'Gallons of Kerosene' ),
    names_to = "Source", 
    values_to = "Amount")

gallon_cost <- double_basics|>
  select('Cost in Dollars (Heating Oil)', 'Cost in Dollars (Propane)', 'Cost in Dollars (Kerosene)')|>
  pivot_longer(cols = c('Cost in Dollars (Heating Oil)', 'Cost in Dollars (Propane)', 'Cost in Dollars (Kerosene)'),
    names_to = "Source_Cost", 
    values_to = "Dollars")

annual_totals_gallon <- gallon_sources |>
  cbind(gallon_cost) |>
  filter(Amount != is.na(NA))|>
  mutate(Anual_Totals = paste(`Amount`, " Gallons,", `Dollars`, "USD"))

annual_totals_gallon <- annual_totals_gallon |>
  mutate(Source = recode(Source,  'Gallons of Heating Oil' = 'Annual heating oil usage from bills', 'Gallons of Propane' = 'Annual propane usage from bills', 'Gallons of Kerosene' = 'Annual kerosene usage from the bills'))

annual_totals_gallon <- annual_totals_gallon[, -c(2,3,4)]
```

```{r}
#| label: setup energy sources kWh
kWh_sources <- double_basics |>
  select('kWh of Electricity')|>
  pivot_longer(cols = c('kWh of Electricity'),
    names_to = "Source", 
    values_to = "Amount")

kWh_cost <- double_basics|>
  select('kWh of Electricity')|>
  pivot_longer(cols = c('kWh of Electricity'),
    names_to = "Source_Cost", 
    values_to = "Dollars")

annual_totals_kWh <- kWh_sources |>
  cbind(gallon_cost) |>
  filter(Amount != is.na(NA))|>
  mutate(Anual_Totals = paste(`Amount`, " kWh,", `Dollars`, "USD"))|>
  mutate(Source = recode(Source,  'kWh of Electricity' = 'Annual electricity usage from bills',))

annual_totals_kWh <- annual_totals_kWh[, -c(2,3,4)]
```

```{r}
#| label: setup energy sources cords
cords_sources <- double_basics |>
  select('Cords of Firewood')|>
  pivot_longer(cols = c('Cords of Firewood'),
    names_to = "Source", 
    values_to = "Amount")

cords_cost <- double_basics|>
  select('Cords of Firewood')|>
  pivot_longer(cols = c('Cords of Firewood'),
    names_to = "Source_Cost", 
    values_to = "Dollars")

annual_totals_cords <- cords_sources |>
  cbind(cords_cost) |>
  filter(Amount != is.na(NA))|>
  mutate(Anual_Totals = paste(`Amount`, " Cords,", `Dollars`, "USD"))|>
   mutate(Source = recode(Source, 'Cords of Firewood' = 'Annual firewood usage from bills',))

annual_totals_cords <- annual_totals_cords[, -c(2,3,4)]
```

```{r}
#| label: setup energy sources tons
tons_sources <- double_basics |>
  select('Tons of pellets')|>
  pivot_longer(cols = c('Tons of pellets'),
    names_to = "Source", 
    values_to = "Amount")

tons_cost <- double_basics|>
  select('Tons of pellets')|>
  pivot_longer(cols = c('Tons of pellets'),
    names_to = "Source_Cost", 
    values_to = "Dollars")

annual_totals_tons <- tons_sources |>
  cbind(tons_cost) |>
  filter(Amount != is.na(NA))|>
  mutate(Anual_Totals = paste(`Amount`, " Tons,", `Dollars`, "USD"))|>
   mutate(Source = recode(Source,  'Tons of pellets' = 'Annual pellets usage from bills',))

annual_totals_tons <- annual_totals_tons[, -c(2,3,4)]
```

```{r}
#| label: setup energy sources other
other_sources <- double_basics |>
  select('Write the quantity and measuring unit')|>
  pivot_longer(cols = c('Write the quantity and measuring unit'),
    names_to = "Source", 
    values_to = "Amount")

other_cost <- double_basics|>
  select('Write the quantity and measuring unit')|>
  pivot_longer(cols = c('Write the quantity and measuring unit'),
    names_to = "Source_Cost", 
    values_to = "Dollars")

annual_totals_other <- other_sources |>
  cbind(other_cost) |>
  filter(Amount != is.na(NA))|>
  mutate(Anual_Totals = paste(`Amount`, `Dollars`, "USD"))|>
  mutate(Source = recode(Source,  'Write the quantity and measuring unit' = 'Other annual energy usage from bills',))

annual_totals_other <- annual_totals_other[, -c(2,3,4)]
```

```{r}
test1 <- annual_totals_kWh|>
  rbind(annual_totals_gallon, annual_totals_cords, annual_totals_tons )
```

### Energy Audit Report {.bheader}

```{r}
#| label: house image path setup
#| echo: false
#| warning: false

# Unique identifier for the image
image_id <- "House_photo_placeholder"

# Generate the file path for the image based on the identifier
image_path <- paste0("", image_id, ".png")


```

```{r, out.width = "50%", fig.align = 'center'}
#| label: image render
#| echo: false
#| warning: false
#| eval: false

# Include the image in the report
knitr::include_graphics(image_path,)
```

Homeowner: `r params$adress`

Address: `r params$adress`

Auditors: `r params$author`

Contact: mdicommunityenergy\@coa.edu, 802 266 0301

Date: `r format(Sys.time(), '%e %B %Y')`

------------------------------------------------------------------------

We conducted an energy assessment of your home on `r Building_Audit$Audit_Date`. This report will tell you what we did, what we found, and what we suggest for your home. These suggestions include information on incentives and financing to make improvements more affordable.

------------------------------------------------------------------------

![](images/Logos-together.png)

## Table of Contents

Here will be the table of contents

## 1. Summary of your Audit

### 1.1 Visual Inspection and Measurements

We started with a tour and visual inspection of the inside and outside of the home. We identified any visible damage to the building, moisture control strategies, major appliances, and insulation. We measured square footage and volume of the home, as well as the area of all exterior windows and doors. We used a kill-a-watt meter to measure the electricity use of some appliances. During your audit, we used a carbon monoxide meter to measure the ambient carbon monoxide levels throughout the home.

### 1.2 Attic

We entered the attic to check for insulation, air sealing, ventilation, and potential hazards such as mold. Additionally, we visually inspected the attic ventilation and any duct and pipework passing through the attic.

### 1.3 Basement

We visually inspected any appliances in the basement and noted insulation levels, moisture, rodents, and any other concerns.

```{r}
#| label: If else chapter 1.4 heading
#| echo: false
#| eval: true
#| warning: false


energy_test_googlesheets <- energy_test_googlesheets %>%
  mutate(combustion_fuels = str_detect(`Energy Sources`, pattern = "[Hh]eat|Kerosene|Propane|Firewood|Pellets|Other"))

if (energy_test_googlesheets$combustion_fuels == TRUE) {
  cat('# 1.4 Combustion Appliance Safety')
} else{
  cat("")
}
```

```{r}
#| label: If else chapter 1.4 gas option
#| echo: false
#| eval: true
#| warning: false

energy_test_googlesheets <- energy_test_googlesheets %>%
  mutate(combustion_propane = str_detect(`Energy Sources`, pattern = "Propane"))
```

`r if(energy_test_googlesheets$combustion_fuels == TRUE){"We assessed combustion appliances that burn fossil fuels such as propane, heating oil, or kerosene. These include furnaces, boilers, water heaters, and gas ovens. We visually inspected the combustion appliance(s) in your home."}else{""}` `r if(energy_test_googlesheets$combustion_fuels == TRUE){"La LA la"}else{""}` `r if(energy_test_googlesheets$combustion_propane == TRUE){"We also performed gas leak detection tests on your propane appliance(s)."}else{""} `

### 1.5 Blower Door / Air Leakage Test

We used a large fan in an exterior door to depressurize your house. This allows us to determine the volume of air leakage into the house and to locate bigger air leaks. To find leaks, we used an infrared camera to check for unusually hot and cold spots. We also checked the pressure differences of the rooms to help determine major air leak locations.

## 2. Summary of Recommendations

We recommend the following upgrades for your home. Detailed information about these recommendations and financial resources can be found in other sections of this report.

```{r}
#| label: 2. summery table
#| eval: true
#| echo: false
gt_ranked_recommendations <- gt(ranked_clean_recommendations) |>
tab_options(table.width = pct(100))

gt_ranked_recommendations
```

## 3. What We Found

### 3.1 Basics

```{r}
#| label: 3.1 basics table
#| eval: true
#| echo: false
gt_all_basics <- gt(all_basics) |>
  tab_options(table.width = pct(100))|>
  cols_width(
    Info ~ px(200),
    Values ~ px(450)
  )
  

gt_all_basics
```



### 3.2 Exterior

### 3.3 Interior/Living space

### 3.4 Blower Door / Air Leakage Test

A blower door test simulates a 20mph wind hitting your house. To run the test, we used a large fan in an exterior door to depressurize your house. This allows us to determine the volume of air leakage into the house and to locate bigger air leaks. To find leaks, we used an infrared camera to check for unusually hot and cold spots. We also checked the pressure differences of the rooms to help determine major air leak locations.Air leaks are a big source of heat gain in warm weather and heat loss in cold weather. They also allow moisture to get into the home. Below are some numbers, pictures, and descriptions explaining what we found.

```{r}

```

Using a thermal imaging camera, we looked for major air leakage locations and thermal bridging, where heat is bypassesing the insulation. There was evidence of …. 
### 3.5 Attic 
### 3.6 Basement 
### 3.7 Electrical and Mechanical Systems 
### 3.8 Energy Bills 
## 4. Recommendations
