---
title: "Energy Audit Report"
format:
  html: default
  pdf: default
  docx:
    number-sections: true
    number-depth: 3
    number-offset: 0
css: styles.css
tbl-colwidths: [75,25]
editor: source
params:
  adress: "Me_test1"
  author: "Rudolfs"
---

```{r}
#| label: load packages
#| echo: false
#| warning: false

#Attach Packages
library(readr)
library(here)
library(dplyr)
library(ggplot2)
library(stringr)
library(readxl)
library(tidyverse)
library(gridExtra)
library(grid)
library(jpeg)
library(cowplot)
library(googlesheets4)
library(reticulate)
library(gt)
library(tibble)
library(kableExtra)

```

```{r}
#| label: setup data
#| echo: false
#| warning: false

#Load Data
Energy_Audits <- read_excel("../data/Energy_Audit_template.xlsx")

Building_Audit <- Energy_Audits |>
  filter(Adress_Name == params$adress) # Auditor_full_name == params$Auditor_full_name

```

```{r}
#| label: load googlesheets data
#| echo: false
#| warning: false

#Load Data
energy_test_googlesheets <- read_sheet("https://docs.google.com/spreadsheets/d/1L38lSRkBoKfQBvQ4I7ItyoWNYLbWi3Lg4Jh2KKlzdOg/edit?usp=sharing")

energy_test_googlesheets <- energy_test_googlesheets[2, ]

#clean_dataset <- janitor::clean_names(dataset)

```

```{r}
#| label: setup rank recommendations data
#| echo: false
#| warning: false

recommendations <- energy_test_googlesheets |>
  #filter(Adress_Name == params$adress) |> #need to parametorize
  select(c("Recommendations ranking [Furnace Tune-up]":"Recommendations ranking [Other]", 'Recommendations ranking [Continuous exterior wall insulation]'))

pivot_recommendations <- recommendations |>
  pivot_longer(cols = "Recommendations ranking [Furnace Tune-up]":"Recommendations ranking [Continuous exterior wall insulation]",
    names_to = "Recommendation", 
    values_to = "Rank")

pivot_recommendations['Description'] <- c("Have the furnace and flue inspected and adjusted by a licensed professional. This should be available from your oil or propane delivery company.","Install high efficiency low flow shower heads to reduce the amount of water and energy to heat this water used when showering. This will save a typical home more than $200/year.","Switch your light bulbs to LED light bulbs. LEDs use 80% less energy than incandescent light bulbs which can significantly reduce your electricity bill. We provide free LED light bulbs, contact us for some if we did not give you any during the audit.","Getting insulating window inserts that help air-seal windows and reduce heat loss and gain. There will be a Window Dresser build on Great Cranberry Island September 28th-October 2nd. Sign up at https://windowdressers.org/sign-up-for-inserts/ There will be a Window Dressers build in Eastport November 18 to 25. Contact Pete to sign up: 207-214-4751 or EastportMEEnergy@gmail.com","Replacing your refrigerator with a new, EnergyStar certified fridge. Look at the Energy Guide label to compare the energy use of new refrigerators.","Replacing your freezer with a new, EnergyStar certified freezer. Look at the Energy Guide label to compare the energy use of new freezers.","Induction stoves are more efficient and safer than electric or gas stoves. There is no risk of carbon monoxide or other harmful combustion gases","Install a heat pump water heater to provide your hot water for cooking and bathing. This is the most efficient way to heat water and will save hundreds of dollars a year compared to electric resistance, heating oil or propane hot water. It will also help to dehumidify while it's running. If your current water heater burns oil or propane, this will also remove a source of combustion gases from your home.","Install gutters and downspouts that divert water at least six feet away from the foundation and to where the ground slopes away from the house.","Replace bathroom exhaust fans with new exhaust fans rated at least 50 CFM. We recommend Panasonic WhisperQuiet or similar fans that don’t create excess noise.","We recommend a kitchen exhaust fan to remove harmful combustion gases from your home.","Install a vapor barrier on the basement floor to stop moisture from entering the basement and house.","Install spray foam on the basement walls.","Air seal the attic and insulate it to at least R-60 (18” of loose-fill cellulose insulation).","Insulate the wall stud cavities with dense packed, blown-in cellulose insulation.","Replace your existing electrical panel to increase the capacity to 200 amps (and address potential safety hazards). This may be eligible for a 30% tax credit up to $600.","Install # air source heat pumps and whole-house surge protection.","Install # air source heat pumps and whole-house surge protection.","Rooftop solar can provide most or all of your home electrical usage. Contact a solar company for pricing and details specific to your home.", "TYPE HERE", "Add a continuous layer of insulation and potentially replacing the air and moisture barrier once it becomes time to replace the siding.")

ranked_recommendations <- pivot_recommendations |>
  mutate(Recommendation = recode(Recommendation,  'Recommendations ranking [Furnace Tune-up]' = 'Furnace Tune-up', 'Recommendations ranking [Low-flow Showerhead(s)]' = 'High efficiency  shower head(s)', 'Recommendations ranking [LEDs]' = 'LEDs', 'Recommendations ranking [Window Dressers]' = 'Window Dressers', 'Recommendations ranking [Refrigerator]' = 'Refrigerator', 'Recommendations ranking [Freezer]' = 'Freezer', 'Recommendations ranking [Induction Stove]' = 'Induction Stove', 'Recommendations ranking [Heat Pump Water Heater]' = 'Heat Pump Water Heater', 'Recommendations ranking [Gutters]' = 'Gutters', 'Recommendations ranking [Bathroom Exhaust Fan]' = 'Bathroom exhaust fan(s)', 'Recommendations ranking [Kitchen Exhaust Fan]' = 'Kitchen exhaust fan', 'Recommendations ranking [Vapor Barrier]' = 'Vapor Barrier', 'Recommendations ranking [Spray Foam]' = 'Spray Foam', 'Recommendations ranking [Attic Insulation ]' = 'Attic Insulation', 'Recommendations ranking [Blow-in cellulose wall insulation]' = 'Blow-in cellulose wall insulation','Recommendations ranking [Continuous exterior wall insulation]' = 'Continuous exterior wall insulation', 'Recommendations ranking [Electrical Panel Upgrade]' = 'Electrical Panel Upgrade', 'Recommendations ranking [Air Source Heat Pump]'= 'Air Source Heat Pump', 'Recommendations ranking [EV+charger]' = 'EV+charger', 'Recommendations ranking [Solar]' = 'Solar', 'Recommendations ranking [Other]' = 'Other')) |>
    arrange((Rank))|>
    filter(Rank != 0)

ranked_clean_recommendations <- ranked_recommendations|>
    select(-Rank)
```

```{r}
#| label: Setup basics data
#| echo: false
#| warning: false
#| eval: true

double_basics <- energy_test_googlesheets |>
  select(`Date Built`, `Number of floors`, `Volume of conditioned space (cubic feet)`, `Square footage of conditioned space`, `Thickness of the attic insulation (inches), at the thinnest location`, `Gallons of Heating Oil`,`Cost in Dollars (Heating Oil)`,`Gallons of Kerosene`,`Cost in Dollars (Kerosene)`,`Gallons of Propane`,`Cost in Dollars (Propane)`,`kWh of Electricity`,`Cost in Dollars (Electricity)`,`Cords of Firewood`,`Cost in Dollars (Firewood)`,`Tons of pellets`,`Cost in Dollars (Pellets)`,`Write the quantity and measuring unit`, `Cost in Dollars (Other)` )

double_other <- energy_test_googlesheets |>
  select(`Date Built`, `Number of floors`, `Volume of conditioned space (cubic feet)`, `Square footage of conditioned space`)|>
  pivot_longer(cols = "Date Built":"Square footage of conditioned space",
    names_to = "Info", 
    values_to = "Values")

#energy_test_googlesheets$`Ambient Carbon Monoxide reading` <- as.character
#character_other <- energy_test_googlesheets |>
  #select( `Foundation Type`,`Ambient Carbon Monoxide reading`,)|>
  #pivot_longer(cols = "Foundation Type":"Ambient Carbon Monoxide reading",
   # names_to = "Info", 
   # values_to = "Values")

```

```{r}
#| label: attic data for basics
#| echo: false

attic_basics <- energy_test_googlesheets |>
  select( `Attic insulation type`, `Quality of attic insulation's installation? Assess worst part of installation.`, `Thickness of the attic insulation (inches), at the thinnest location`)|>
  mutate(Attic_all = paste(`Attic insulation type`, ",", `Quality of attic insulation's installation? Assess worst part of installation.`, "instullation,", `Thickness of the attic insulation (inches), at the thinnest location`, "inches"))|>
  mutate(Info = 'Attic',
        .before =`Attic insulation type`)

attic_basics <- attic_basics[,-c(2,3,4)]

names(attic_basics) <- c('Info', 'Values')
  

```

```{r}
#| label: setup energy sources gallons
#| echo: false
gallon_sources <- double_basics |>
  select('Gallons of Heating Oil', 'Gallons of Propane', 'Gallons of Kerosene')|>
  pivot_longer(cols = c('Gallons of Heating Oil', 'Gallons of Propane', 'Gallons of Kerosene' ),
    names_to = "Source", 
    values_to = "Amount")

gallon_cost <- double_basics|>
  select('Cost in Dollars (Heating Oil)', 'Cost in Dollars (Propane)', 'Cost in Dollars (Kerosene)')|>
  pivot_longer(cols = c('Cost in Dollars (Heating Oil)', 'Cost in Dollars (Propane)', 'Cost in Dollars (Kerosene)'),
    names_to = "Source_Cost", 
    values_to = "Dollars")

annual_totals_gallon <- gallon_sources |>
  cbind(gallon_cost) |>
  filter(Amount != is.na(NA))|>
  mutate(Anual_Totals = paste0(`Amount`, " Gallons,", `Dollars`, "USD"))

annual_totals_gallon <- annual_totals_gallon |>
  mutate(Source = recode(Source,  'Gallons of Heating Oil' = 'Annual heating oil usage from bills:', 'Gallons of Propane' = 'Annual propane usage from bills:', 'Gallons of Kerosene' = 'Annual kerosene usage from the bills:'))

annual_totals_gallon <- annual_totals_gallon[, -c(2,3,4)]
```

```{r}
#| label: setup energy sources kWh
#| echo: false
kWh_sources <- double_basics |>
  select('kWh of Electricity')|>
  pivot_longer(cols = c('kWh of Electricity'),
    names_to = "Source", 
    values_to = "Amount")

kWh_cost <- double_basics|>
  select('kWh of Electricity')|>
  pivot_longer(cols = c('kWh of Electricity'),
    names_to = "Source_Cost", 
    values_to = "Dollars")

annual_totals_kWh <- kWh_sources |>
  cbind(gallon_cost) |>
  filter(Amount != is.na(NA))|>
  mutate(Anual_Totals = paste(`Amount`, " kWh,", `Dollars`, "USD"))|>
  mutate(Source = recode(Source,  'kWh of Electricity' = 'Annual electricity usage from bills:',))

annual_totals_kWh <- annual_totals_kWh[, -c(2,3,4)]
```

```{r}
#| label: setup energy sources cords
#| echo: false
cords_sources <- double_basics |>
  select('Cords of Firewood')|>
  pivot_longer(cols = c('Cords of Firewood'),
    names_to = "Source", 
    values_to = "Amount")

cords_cost <- double_basics|>
  select('Cords of Firewood')|>
  pivot_longer(cols = c('Cords of Firewood'),
    names_to = "Source_Cost", 
    values_to = "Dollars")

annual_totals_cords <- cords_sources |>
  cbind(cords_cost) |>
  filter(Amount != is.na(NA))|>
  mutate(Anual_Totals = paste(`Amount`, " Cords,", `Dollars`, "USD"))|>
   mutate(Source = recode(Source, 'Cords of Firewood' = 'Annual firewood usage from bills:',))

annual_totals_cords <- annual_totals_cords[, -c(2,3,4)]
```

```{r}
#| label: setup energy sources tons
#| echo: false
tons_sources <- double_basics |>
  select('Tons of pellets')|>
  pivot_longer(cols = c('Tons of pellets'),
    names_to = "Source", 
    values_to = "Amount")

tons_cost <- double_basics|>
  select('Tons of pellets')|>
  pivot_longer(cols = c('Tons of pellets'),
    names_to = "Source_Cost", 
    values_to = "Dollars")

annual_totals_tons <- tons_sources |>
  cbind(tons_cost) |>
  filter(Amount != is.na(NA))|>
  mutate(Anual_Totals = paste(`Amount`, " Tons,", `Dollars`, "USD"))|>
   mutate(Source = recode(Source,  'Tons of pellets' = 'Annual pellets usage from bills:',))

annual_totals_tons <- annual_totals_tons[, -c(2,3,4)]
```

```{r}
#| label: setup energy sources other
#| echo: false
other_sources <- double_basics |>
  select('Write the quantity and measuring unit')|>
  pivot_longer(cols = c('Write the quantity and measuring unit'),
    names_to = "Source", 
    values_to = "Amount")

other_cost <- double_basics|>
  select('Write the quantity and measuring unit')|>
  pivot_longer(cols = c('Write the quantity and measuring unit'),
    names_to = "Source_Cost", 
    values_to = "Dollars")

annual_totals_other <- other_sources |>
  cbind(other_cost) |>
  filter(Amount != is.na(NA))|>
  mutate(Anual_Totals = paste(`Amount`, `Dollars`, "USD"))|>
  mutate(Source = recode(Source,  'Write the quantity and measuring unit' = 'Other annual energy usage from bills:',))

annual_totals_other <- annual_totals_other[, -c(2,3,4)]
```

```{r}
#| label: annual totals for energy sources chapter 3
#| echo: false
annual_totals <- annual_totals_kWh|>
  rbind(annual_totals_gallon, annual_totals_cords, annual_totals_tons )

names(annual_totals) <- c('Info', 'Values')
```

```{r}
#| label: all basics
#| echo: false

all_basics <- double_other |>
  rbind(attic_basics,annual_totals )|> #character_other,
  arrange(factor(Info, levels = c('Date Built', 'Foundation Type', 'Attic', 'Number of floors', 'Square footage of conditioned space', 'Volume of conditioned space (cubic feet)','Ambient Carbon Monoxide reading')))
```

```{r}
#| label: setup data 3.2
#| echo: false

exterior <- energy_test_googlesheets|>
  select('Roof type', 'Roof age', 'Condition of the Roof?', 'Orientation of the primary roof faces','Comment about condition of the roof', 'Existing moisture control strategies?', 'Condition of moisture control strategies?', 'Comments about existing moisture control strategies?', 'Siding type', 'Condition of the siding?', 'Comment about condition of the siding', 'Door(s) type | 1', 'Number of doors of this type | 1', 'Total door area of this type | 1', 'How many windows of this type there are? | 1', 'Number of panes in windows of this type and material | 1 [single]', 'Number of panes in windows of this type and material | 1 [double]', 'Number of panes in windows of this type and material | 1 [triple]', 'Condition of the windows of this type? | 1', 'More about condition of the windows of this type | 1', 'Total windows areas of this type? | 1')

```

```{r}
#| label: setup roof type
#| echo: false

roof_type_all <- exterior |>
  select('Roof type', 'Condition of the Roof?','Comment about condition of the roof') |>
  mutate(Info = paste(`Roof type`, "in ",`Condition of the Roof?`,"condition. ", `Comment about condition of the roof`))#|>

roof_type_all <- roof_type_all[, -c(1:3)]

roof_type_all <- roof_type_all|>
  pivot_longer(cols = Info ,
    names_to = "Info" ,
    values_to = "Values")|>
  mutate(Info = recode(Info,  'Info' = 'Roof type:',))
```

```{r}
#| label: setup roof moisture control
#| echo: false

roof_moisture_control <- exterior |>
  select('Existing moisture control strategies?', 'Condition of moisture control strategies?', 'Comments about existing moisture control strategies?') |>
  mutate(Info = paste(`Existing moisture control strategies?`,'in ', `Condition of moisture control strategies?`, 'condition .', `Comments about existing moisture control strategies?`))#|>

roof_moisture_control <- roof_moisture_control[, -c(1:3)]

roof_moisture_control <- roof_moisture_control|>
  pivot_longer(cols = Info ,
    names_to = "Info" ,
    values_to = "Values")|>
  mutate(Info = recode(Info,  'Info' = 'Moisture control:',))
```

```{r}
#| label: setup siding
#| echo: false

siding <- exterior |>
  select('Siding type', 'Condition of the siding?', 'Comment about condition of the siding') |>
  mutate(Info = paste(`Siding type`,'in ', `Condition of the siding?`, 'condition .', `Comment about condition of the siding`))#|>

siding <- siding[, -c(1:3)]

siding <- siding|>
  pivot_longer(cols = Info ,
    names_to = "Info" ,
    values_to = "Values")|>
  mutate(Info = recode(Info,  'Info' = 'Siding:',))
```

```{r}
#| label: setup exterior doors
#| echo: false

doors <- exterior |>
  select('Door(s) type | 1', 'Number of doors of this type | 1', 'Total door area of this type | 1') |>
  mutate(Info = paste(`Number of doors of this type | 1`, `Door(s) type | 1`,'door. Totaling ', `Total door area of this type | 1`, 'square feet.'))#|>

doors <- doors[, -c(1:3)]

doors <- doors|>
  pivot_longer(cols = Info ,
    names_to = "Info" ,
    values_to = "Values")|>
  mutate(Info = recode(Info,  'Info' = 'Exterior doors:',))
```

```{r}
#| label: setup windows
#| echo: false

windows <- exterior |>
  select('How many windows of this type there are? | 1', 'Number of panes in windows of this type and material | 1 [single]', 'Number of panes in windows of this type and material | 1 [double]', 'Number of panes in windows of this type and material | 1 [triple]', 'Condition of the windows of this type? | 1', 'More about condition of the windows of this type | 1', 'Total windows areas of this type? | 1') |>
  mutate(Info = paste(`How many windows of this type there are? | 1`, `Number of panes in windows of this type and material | 1 [single]`, `Number of panes in windows of this type and material | 1 [double]`, `Number of panes in windows of this type and material | 1 [triple]`, `Condition of the windows of this type? | 1`, `More about condition of the windows of this type | 1`, `Total windows areas of this type? | 1`))#|>

windows <- windows[, -c(1:7)]

windows <- windows|>
  pivot_longer(cols = Info ,
    names_to = "Info" ,
    values_to = "Values")|>
  mutate(Info = recode(Info,  'Info' = 'Windows:',))
```

```{r}
#| label: 3.2 table setup
#| echo: false

all_exterior <- roof_type_all |>
  rbind(roof_moisture_control, siding, doors, windows )#|>
  #arrange(factor(Info, levels = c('Date Built', 'Foundation Type', 'Attic', 'Number of floors', 'Square footage of conditioned space', 'Volume of conditioned space (cubic feet)','Ambient Carbon Monoxide reading')))
```

```{r}
#| label: 3.4 data set up
#| echo: false
blower_door_leakage <- energy_test_googlesheets|>
  select( "Equivalent leakage area natural","Equivalent leakage area blower door")|>
  mutate(`Equivalent leakage area` = paste(`Equivalent leakage area natural`, "under natural conditions,", `Equivalent leakage area blower door`, "under CFM50."))

blower_door_leakage <-blower_door_leakage[,-c(1:2)]

blower_door_leakage <-blower_door_leakage|>
  pivot_longer(c("Equivalent leakage area"),
    names_to = "Info", 
    values_to = "Values")

blower_door <- energy_test_googlesheets|>
  select(c("CFM50", "ACH50","ACHn", ))|> #there is another column "Comments about air leakage"
  pivot_longer(c("CFM50", "ACH50","ACHn"),
    names_to = "Info", 
    values_to = "Values")

all_blower_door <- blower_door|>
  rbind(blower_door_leakage)|>
  mutate(Info = recode(Info,  "CFM50" = "CFM50:", "ACH50" = "ACH50:","Equivalent leakage area" = "Equivalent leakage area:","ACHn" = "ACHnatural:" ))|>
  arrange(factor(Info, levels = c('CFM50:', 'ACH50:', 'Equivalent leakage area:', 'ACHnatural:')))

all_blower_door['Description'] <- c("CFM50 describes how many cubic feet per minute of air are leaving the house at 50 pascals of pressure difference (while the blower door is running). For every cubic foot of air that leaves the house, a cubic foot of air enters the house as well. The higher the number, the leakier the house.", "ACH50 tells us how many air changes per hour are taking place in the house at 50 pascals of pressure difference. This value is normalized for the volume of the house and thus allows for comparison between different houses. The higher the number, the leakier the house.","This is the area equivalent to all of the air leaks in the house combined.","Accounting for the volume of the home, this means that the house exchanges –% of its air every hour. Over one day, the house goes through – complete air changes.")
```

```{r}
#| label: attic data for 3.5
#| echo: false

attic_double <- energy_test_googlesheets|>
  select(`Attic Area`)|> # `Thickness of the attic insulation (inches), at the thinnest location`
  pivot_longer(c(`Attic Area`),
    names_to = "Info",
    values_to = "Values")

attic_character <- energy_test_googlesheets|>
  select(`Does attic have air sealing?`, `Comment about air sealing`, `Any additional comments on attic insulation, e.g., is the entire attic insulated?`, `Any hazards or mold/moisture/asbestos present in the attic?`, `Describe the hazards or mold/moisture in the attic`, `Is there ducktwork in the attic?`, `Comment about condition of the ducktwork in the attic`,`Are bathroom and kitchen exhaust fans being vented to outside?`,`Attic ventilation type?`, `Quality of attic insulation's installation? Assess worst part of installation.`,`Attic insulation type`)|>
  mutate(`Air sealing:` = paste(`Does attic have air sealing?`,`Comment about air sealing`))|>
  mutate(`Other observations:` = paste(`Any additional comments on attic insulation, e.g., is the entire attic insulated?`, `Any hazards or mold/moisture/asbestos present in the attic?`, `Describe the hazards or mold/moisture in the attic`))|>
  mutate(`Ventilation:` = `Are bathroom and kitchen exhaust fans being vented to outside?`,`Attic ventilation type?`)|>
  mutate(`Ducts:` = `Is there ducktwork in the attic?`, `Comment about condition of the ducktwork in the attic`)

attic_character <- attic_character[, -c(1:9)]
  
attic_character <- attic_character|>
  pivot_longer(c(`Attic insulation type`,`Quality of attic insulation's installation? Assess worst part of installation.`,`Air sealing:`,`Other observations:`,`Ventilation:`,`Ducts:`),
  names_to = "Info",
   values_to = "Values")

all_attic <- attic_double|>
  rbind(attic_character)|>
  arrange((factor(Info, levels = c("Attic Area","Attic insulation type", "Quality of attic insulation's installation? Assess worst part of installation.", "Air sealing:","Other observations:","Ventilation:","Ducts:" ))))|>
  mutate(Info = recode(Info,"Attic Area" = "Area (sq ft):","Attic insulation type" = "Insulation type:", "Quality of attic insulation's installation? Assess worst part of installation." = "Insulation condition:"  ))
```

```{r}
#| label: basement data for 3.6
#| echo: false
#| eval: false

basement_double <- energy_test_googlesheets|>
  select(`Attic Area`, `Thickness of the attic insulation (inches), at the thinnest location`)|>
  pivot_longer(c(`Attic Area`, `Thickness of the attic insulation (inches), at the thinnest location`),
    names_to = "Info",
    values_to = "Values")

basement_character <- energy_test_googlesheets|>
  select(`Does attic have air sealing?`, `Comment about air sealing`, `Any additional comments on attic insulation, e.g., is the entire attic insulated?`, `Any hazards or mold/moisture/asbestos present in the attic?`, `Describe the hazards or mold/moisture`, `Is there ducktwork in the attic?`, `Comment about condition of the ducktwork in the attic`,`Are bathroom and kitchen exhaust fans being vented to outside?`,`Attic ventilation type?`, `Quality of attic insulation's installation? Assess worst part of installation.`,`Attic insulation type`)|>
  pivot_longer(c(`Does attic have air sealing?`, `Comment about air sealing`, `Any additional comments on attic insulation, e.g., is the entire attic insulated?`, `Any hazards or mold/moisture/asbestos present in the attic?`, `Describe the hazards or mold/moisture`, `Is there ducktwork in the attic?`, `Comment about condition of the ducktwork in the attic`,`Are bathroom and kitchen exhaust fans being vented to outside?`,`Attic ventilation type?`, `Quality of attic insulation's installation? Assess worst part of installation.`,`Attic insulation type`),
    names_to = "Info",
    values_to = "Values")

all_basement <- basement_double|>
  rbind(basement_character)
```


```{r}
#| label: house image path setup
#| echo: false
#| warning: false

# Unique identifier for the image
image_id <- "House_photo_placeholder"

# Generate the file path for the image based on the identifier
image_path <- paste0("", image_id, ".png")


```

```{r, out.width = "50%", fig.align = 'center'}
#| label: image render
#| echo: false
#| warning: false
#| eval: false

# Include the image in the report
knitr::include_graphics(image_path,)
```

Homeowner(s): `r energy_test_googlesheets$"Homeowner/s"`

Address: `r energy_test_googlesheets$Home_Address`

Auditors: `r energy_test_googlesheets$Names_of_the_Auditors`

Contact: mdicommunityenergy\@coa.edu, 802 266 0301

Date: `r format(Sys.time(), '%e %B %Y')`

------------------------------------------------------------------------

We conducted an energy assessment of your home on `r Building_Audit$Audit_Date`. This report will tell you what we did, what we found, and what we suggest for your home. These suggestions include information on incentives and financing to make improvements more affordable.

------------------------------------------------------------------------

![](images/Logos-together.png)


Here will be the table of contents

## Summary of your Audit

### Visual Inspection and Measurements

We started with a tour and visual inspection of the inside and outside of the home. We identified any visible damage to the building, moisture control strategies, major appliances, and insulation. We measured square footage and volume of the home, as well as the area of all exterior windows and doors. We used a kill-a-watt meter to measure the electricity use of some appliances. During your audit, we used a carbon monoxide meter to measure the ambient carbon monoxide levels throughout the home.

### Attic

We entered the attic to check for insulation, air sealing, ventilation, and potential hazards such as mold. Additionally, we visually inspected the attic ventilation and any duct and pipework passing through the attic.

### Basement

We visually inspected any appliances in the basement and noted insulation levels, moisture, rodents, and any other concerns.

### Blower Door / Air Leakage Test

We used a large fan in an exterior door to depressurize your house. This allows us to determine the volume of air leakage into the house and to locate bigger air leaks. To find leaks, we used an infrared camera to check for unusually hot and cold spots. We also checked the pressure differences of the rooms to help determine major air leak locations.

```{r}
#| label: If else chapter 1.4 heading
#| echo: false
#| eval: true
#| warning: false


energy_test_googlesheets <- energy_test_googlesheets %>%
  mutate(combustion_fuels = str_detect(`Energy Sources`, pattern = "[Hh]eat|Kerosene|Propane|Firewood|Pellets|Other"))

#energy_test_googlesheets <- energy_test_googlesheets %>%
  #mutate(failed_combustion_safety_test = str_detect(`Air free CO`, pattern = (!= is.na(NA))))

#if (energy_test_googlesheets$combustion_fuels == TRUE) {
  #cat('Combustion Appliance Safety')
#} else{
#  cat("")
#}
```

```{r}
#| label: If else chapter 1.4 gas option
#| echo: false
#| eval: true
#| warning: false

energy_test_googlesheets <- energy_test_googlesheets %>%
  mutate(combustion_propane = str_detect(`Energy Sources`, pattern = "Propane"))
```

### Combustion Appliance Safety

`r if(energy_test_googlesheets$combustion_fuels == TRUE){"We visually inspected the combustion appliance(s) in your home,"}else{""}` `r if(energy_test_googlesheets$combustion_fuels == TRUE){"and conducted combustion safety tests."}else{""}` `r if(energy_test_googlesheets$combustion_propane == TRUE){"We also performed gas leak detection tests on your propane appliance(s)."}else{""}`


## Summary of Recommendations

We recommend the following upgrades for your home. Detailed information about these recommendations and financial resources can be found in other sections of this report.

```{r}
#| label: 2. summery table
#| eval: true
#| echo: false
gt_ranked_recommendations <- gt(ranked_clean_recommendations) |>
  tab_options(table.width = pct(100))|>
  cols_width(
    Recommendation ~ px(200),
    Description ~ px(450)
  )

gt_ranked_recommendations
```

## What We Found

### Basics

```{r}
#| label: 3.1 basics table
#| eval: true
#| echo: false
gt_all_basics <- gt(all_basics) |>
  tab_options(table.width = pct(100))|>
  cols_width(
    Info ~ px(200),
    Values ~ px(450)
  )|>
  cols_label(
    Info = "",
    Values = ""
  )
  

gt_all_basics
```

### Exterior

```{r}
#| label: 3.2 Exterior table
#| eval: true
#| echo: false
gt_all_exterior <- gt(all_exterior) |>
  tab_options(table.width = pct(100))|>
  cols_width(
    Info ~ px(200),
    Values ~ px(450)
  )|>
  cols_label(
    Info = "",
    Values = ""
  )#|>
  #tab_style(
    #style = cell_borders(
     # sides = "all",
     # color = "blue",
     # weight = px(3)
   # ),
   # locations = list(cells_column_labels())
 # )

gt_all_exterior

#kableExtra::kable(all_exterior)
```

### Interior/Living space

### Blower Door / Air Leakage Test

A blower door test simulates a 20mph wind hitting your house. To run the test, we used a large fan in an exterior door to depressurize your house. This allows us to determine the volume of air leakage into the house and to locate bigger air leaks. To find leaks, we used an infrared camera to check for unusually hot and cold spots. We also checked the pressure differences of the rooms to help determine major air leak locations.Air leaks are a big source of heat gain in warm weather and heat loss in cold weather. They also allow moisture to get into the home. Below are some numbers, pictures, and descriptions explaining what we found.

```{r}
#| label: 3.4 blower door table
#| eval: true
#| echo: false
gt_all_blower_door <- gt(all_blower_door) |>
  tab_options(table.width = pct(100))|>
  cols_width(
    Info ~ px(150),
    Values ~ px(100),
    Description ~ px(400)
  )|>
  cols_label(
    Info = "",
    Values = "",
    Description = ""
  )

gt_all_blower_door
```

Using a thermal imaging camera, we looked for major air leakage locations and thermal bridging, where heat is bypassing the insulation. There was evidence of ….

### Attic

```{r}
#| label: 3.5 attic table
#| eval: true
#| echo: false
gt_all_attic <- gt(all_attic) |>
  tab_options(table.width = pct(100))|>
  cols_width(
    Info ~ px(200),
    Values ~ px(450),
  )|>
  cols_label(
    Info = "",
    Values = ""
  )

gt_all_attic
```


### Basement

### Electrical and Mechanical Systems

### Energy Bills

## Recommendations

